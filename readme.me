crear tabla en django
py manage.py makemigrations
py manage.py migrate

#Administrador de django
#creamos usuario y contrase√±a para el administrador de django
ejecutamos en el terminal el siguiente comando:
py manage.py createsuperuser
user: admin
pass: 123

ListView Funciona para ver los datos
CreateView Sirve para registrar datos sin utilizar el administrador django

025 Blog-sobre-Tipos-de-Campos
https://neunapp.com/programacion-web-con-django/tipos-de-campos-de-un-modelo-en-django-fields-in-models-33026/


EJECUTAMOS  SQLSHELL 
Server [localhost]: DEJAR VACIO 
Database [postgres]:DEJAR VACIO 
Port [5432]: DEJAR VACIO 
Username [postgres]: DEJAR VACIO 
Password for user postgres: 123
psql (15.1)
WARNING: Console code page (850) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.

postgres=# CREATE DATABASE dbempleado;
CREATE DATABASE
postgres=# CREATE USER neunapp;
CREATE ROLE
postgres=# \C dbempleado;
Title is "dbempleado".
postgres=# \c dbempleado;
You are now connected to database "dbempleado" as user "postgres".
dbempleado=# ALTER ROLE neunapp WITH PASSWORD '123'
dbempleado-# ;
ALTER ROLE
dbempleado=#


ahora debemos instalar 
pip install psycopg2 

esto para que el codigo python se transforme en codigo sql de postgress

ejecutar las migraciones 
 py manage.py migrate

 SALTARA UN ERROR Y SE SOLUCIONA CON IR A SQLSHELL

 Server [localhost]:
Database [postgres]:
Port [5432]:
Username [postgres]:
Password for user postgres:
psql (15.1)
WARNING: Console code page (850) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.

postgres=# \c dbempleado;
You are now connected to database "dbempleado" as user "postgres".
dbempleado=# GRANT postgres TO neunapp;

ahora no podemos acceder a 127.0.0.1/admin por que al cambiamos de gestor de base de datos

entonces debemos ejecutar
py manage.py createsuperuser
y crear el super usuario

Administrador de django sirve la nueva tendencia de desarrollar
Backend, que es tener piezas de CRUD  mas sencillas y rapidas de implementar.entonces la tendencia es en desarrollo agil y corto tiempo

Luego de crear class Habilidades en los models ejecutamos 
makemigrations y luego migrate 
 
 Luego vinculamos a habilidades con Empleado con una relacion de muchos a muchos

 models.ManyToManyField(Habilidades)

Otra vez  ejecutamos 
makemigrations y luego migrate  por alterar los modelos y ejecute el codigo sql 


Vistas Basadas en clases 
Ya los habiamos trabajado pero de una manera muy general
ListView

ListView
para acceder a una lista en un html de un listview sin context_object_name='lista' 
en el html pomenos {{object_list}}